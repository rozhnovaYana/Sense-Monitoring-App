// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  login         String @unique
  role          Role  @default(USER)
  name          String 
  Incident      Incident[]
  Post       Post[]
  Comment  Comment[]
}

model Message {
  id    Int   @id @default(autoincrement()) @unique
  level String
  theme String
  activities String
  reasons String
  isResolved Boolean
  numberOfIncident String 
  numberOfMessage String
  startDate DateTime
  endDate DateTime?
  telegramId Int?
  webexCSId String?
  webexAlertId String?
}

model Incident {
  id    Int   @id @default(autoincrement())
  numberOfIncident  String @unique
  timeRequest String
  timeSend String
  reporter String
  userId  String
  user  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  startDate String 
  isSLA Boolean
}

model Post {
  id      String @id @default(cuid())
  content String
  userId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  comments Comment[]
}

model Comment {
  id       String  @id @default(cuid())
  content  String
  postId   String
  userId  String
  parentId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user  User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  parent   Comment?  @relation("Comments", fields: [parentId], references: [id], onDelete: Cascade)
  post     Post      @relation(fields: [postId], references: [id], onDelete: Cascade)
  children Comment[] @relation("Comments")
}
enum Role {
  USER
  ADMIN
}